<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="4" total="9" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="82232" started-at="2022-05-10T08:57:47Z" finished-at="2022-05-10T08:59:09Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="82232" started-at="2022-05-10T08:57:47Z" finished-at="2022-05-10T08:59:09Z">
      <class name="POMProject.Script.LoginTest">
        <test-method status="PASS" signature="invalidUserNamenInvalidPassword()[pri:0, instance:POMProject.Script.LoginTest@73c3cd09]" name="invalidUserNamenInvalidPassword" duration-ms="4762" started-at="2022-05-10T08:58:08Z" finished-at="2022-05-10T08:58:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserNamenInvalidPassword -->
        <test-method status="PASS" signature="takeScreenShotOnFaliure(org.testng.ITestResult)[pri:0, instance:POMProject.Script.LoginTest@73c3cd09]" name="takeScreenShotOnFaliure" is-config="true" duration-ms="3" started-at="2022-05-10T08:58:13Z" finished-at="2022-05-10T08:58:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidUserNamenInvalidPassword status=SUCCESS method=LoginTest.invalidUserNamenInvalidPassword()[pri:0, instance:POMProject.Script.LoginTest@73c3cd09] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFaliure -->
        <test-method status="PASS" signature="invalidUserNamenValidPassword()[pri:1, instance:POMProject.Script.LoginTest@73c3cd09]" name="invalidUserNamenValidPassword" duration-ms="8641" started-at="2022-05-10T08:58:13Z" finished-at="2022-05-10T08:58:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserNamenValidPassword -->
        <test-method status="PASS" signature="takeScreenShotOnFaliure(org.testng.ITestResult)[pri:0, instance:POMProject.Script.LoginTest@73c3cd09]" name="takeScreenShotOnFaliure" is-config="true" duration-ms="1" started-at="2022-05-10T08:58:22Z" finished-at="2022-05-10T08:58:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidUserNamenValidPassword status=SUCCESS method=LoginTest.invalidUserNamenValidPassword()[pri:1, instance:POMProject.Script.LoginTest@73c3cd09] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFaliure -->
        <test-method status="PASS" signature="validUserNamenInvalidPassword()[pri:2, instance:POMProject.Script.LoginTest@73c3cd09]" name="validUserNamenInvalidPassword" duration-ms="20080" started-at="2022-05-10T08:58:22Z" finished-at="2022-05-10T08:58:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserNamenInvalidPassword -->
        <test-method status="PASS" signature="takeScreenShotOnFaliure(org.testng.ITestResult)[pri:0, instance:POMProject.Script.LoginTest@73c3cd09]" name="takeScreenShotOnFaliure" is-config="true" duration-ms="3" started-at="2022-05-10T08:58:42Z" finished-at="2022-05-10T08:58:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validUserNamenInvalidPassword status=SUCCESS method=LoginTest.validUserNamenInvalidPassword()[pri:2, instance:POMProject.Script.LoginTest@73c3cd09] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFaliure -->
        <test-method status="PASS" signature="ValidUserNamenValidPassword()[pri:3, instance:POMProject.Script.LoginTest@73c3cd09]" name="ValidUserNamenValidPassword" duration-ms="8413" started-at="2022-05-10T08:58:42Z" finished-at="2022-05-10T08:58:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidUserNamenValidPassword -->
        <test-method status="PASS" signature="takeScreenShotOnFaliure(org.testng.ITestResult)[pri:0, instance:POMProject.Script.LoginTest@73c3cd09]" name="takeScreenShotOnFaliure" is-config="true" duration-ms="0" started-at="2022-05-10T08:58:50Z" finished-at="2022-05-10T08:58:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidUserNamenValidPassword status=SUCCESS method=LoginTest.ValidUserNamenValidPassword()[pri:3, instance:POMProject.Script.LoginTest@73c3cd09] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFaliure -->
      </class> <!-- POMProject.Script.LoginTest -->
      <class name="POMProject.Script.LoginBase">
        <test-method status="PASS" signature="beforeTest(java.lang.String)[pri:0, instance:POMProject.Script.LoginBase@74f827ad]" name="beforeTest" is-config="true" duration-ms="21657" started-at="2022-05-10T08:57:47Z" finished-at="2022-05-10T08:58:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:POMProject.Script.LoginBase@74f827ad]" name="afterTest" is-config="true" duration-ms="417" started-at="2022-05-10T08:59:08Z" finished-at="2022-05-10T08:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- POMProject.Script.LoginBase -->
      <class name="POMProject.Script.HomePageTest">
        <test-method status="FAIL" signature="f()[pri:4, instance:POMProject.Script.HomePageTest@4a8a0099]" name="f" duration-ms="17937" started-at="2022-05-10T08:58:50Z" finished-at="2022-05-10T08:59:08Z">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[com.sun.proxy.$Proxy31 cannot be cast to org.openqa.selenium.By]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: com.sun.proxy.$Proxy31 cannot be cast to org.openqa.selenium.By
at POMProject.utilities.PageUtilities.radioButtonSelect(PageUtilities.java:97)
at POMProject.Page.HomePage.radio(HomePage.java:42)
at POMProject.Script.HomePageTest.f(HomePageTest.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.api.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:167)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84)
at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1295)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1159)
at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:932)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:210)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:156)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:148)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:972)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:293)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:196)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:282)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:225)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:406)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:347)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="takeScreenShotOnFaliure(org.testng.ITestResult)[pri:0, instance:POMProject.Script.HomePageTest@4a8a0099]" name="takeScreenShotOnFaliure" is-config="true" duration-ms="276" started-at="2022-05-10T08:59:08Z" finished-at="2022-05-10T08:59:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f status=FAILURE method=HomePageTest.f()[pri:4, instance:POMProject.Script.HomePageTest@4a8a0099] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenShotOnFaliure -->
      </class> <!-- POMProject.Script.HomePageTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
